// Generated by LiveScript 1.5.0
(function(){
  var express, bodyParser, serveStatic, blockstarterWl, ddos, config, map, app, __path, protection, createRoute;
  express = require('express');
  bodyParser = require('body-parser');
  serveStatic = require('serve-static');
  blockstarterWl = require('blockstarter-wl');
  ddos = require('ddos');
  config = require('./config.json');
  map = require('prelude-ls').map;
  app = express();
  app.use(bodyParser.json());
  __path = __dirname + '/public';
  if (config.server.useStatic) {
    app.use(serveStatic(__path, {
      maxAge: '1y'
    }));
  } else {
    app.use(express['static'](__path));
  }
  protection = new ddos(config.requestLimits);
  app.use(protection.express);
  console.log("init route /");
  app.get('/', function(req, res){
    return res.redirect('/login/index.html');
  });
  createRoute = function(key){
    console.log("init route /api/" + key);
    return app.post("/api/" + key, function(req, resp){
      var request;
      request = importAll$(importAll$({}, req.body), config);
      blockstarterWl[key](request, function(err, data){
        var ref$;
        console.log("response " + key + " -> err: " + err);
        if (err != null) {
          return resp.status(400).send((ref$ = err.response) != null ? ref$.text : void 8);
        }
        resp.send(data);
      });
    });
  };
  map(createRoute)(
  Object.keys(
  blockstarterWl));
  app.listen(config.server.port);
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
