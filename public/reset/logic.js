// Generated by LiveScript 1.5.0
(function(){
  var out$ = typeof exports != 'undefined' && exports || this;
  angular.module('app', ['flyber', 'ngStorage', 'pascalprecht.translate']).config(function($translateProvider){
    $translateProvider.translations('en', {
      "Forgot password": "Forgot password",
      "Please enter your email so we can send you a link to restore the access to your account.": "Please enter your email so we can send you a link to restore the access to your account.",
      "Restore the access to your account": "Restore the access to your account"
    });
    $translateProvider.translations('ru', {
      "Forgot password": "Забыли пароль",
      "Please enter your email so we can send you a link to restore the access to your account.": "Пожалуйста, введите адрес электронной почты, чтобы мы могли отправить вам ссылку для восстановления доступа к вашей учетной записи.",
      "Restore the access to your account": "Восстановить доступ к вашей учетной записи"
    });
    return $translateProvider.preferredLanguage('en');
  }).controller('restore', function($scope, $http, $localStorage, $translate){
    var init, changeLanguage, setLanguage, getUrlParam, model, form, reset;
    init = function(func){
      var s, ref$;
      s = init.scripts = (ref$ = init.scripts) != null
        ? ref$
        : [];
      init.all = function(){
        return s.forEach(function(it){
          return it();
        });
      };
      s.push(func);
      return func;
    };
    out$.$localStorage = $localStorage;
    changeLanguage = init(function(language){
      return $translate.use(language != null
        ? language
        : $localStorage.language);
    });
    out$.setLanguage = setLanguage = function(language){
      $localStorage.language = language;
      return changeLanguage(language);
    };
    getUrlParam = function(name, url){
      var regex, results;
      if (!url) {
        url = window.location.href;
      }
      name = name.replace(/[\[\]]/g, '\\$&');
      regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
      results = regex.exec(url);
      if (!results) {
        return null;
      }
      if (!results[2]) {
        return '';
      }
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    };
    out$.model = model = {
      passwordReset: false
    };
    out$.form = form = {
      newPassword: null,
      newPasswordAgain: null,
      restoreKey: getUrlParam('restore-key')
    };
    out$.reset = reset = function($event){
      $event.preventDefault();
      if (form.newPassword == null) {
        return alert("New password is required");
      }
      if (form.newPasswordAgain == null) {
        return alert("Repeat your new password");
      }
      if (form.newPasswordAgain !== form.newPassword) {
        return alert("Passwords do not match");
      }
      return $http.post('/api/resetPassword', form).then(function(resp){
        return model.passwordReset = true;
      })['catch'](function(resp){
        return alert(resp.data);
      });
    };
    init.all();
    importAll$($scope, out$);
    return window.ngscope = importAll$({}, out$);
  });
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
